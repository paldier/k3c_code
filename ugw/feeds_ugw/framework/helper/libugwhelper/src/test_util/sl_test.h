#define DEVICE_FIREWALL 1
#define DEVICE_FIREWALL_ENABLE 2
#define DEVICE_FIREWALL_CONFIG 3
#define DEVICE_FIREWALL_ADVANCEDLEVEL 4
#define DEVICE_FIREWALL_TYPE 5
#define DEVICE_FIREWALL_VERSION 6
#define DEVICE_FIREWALL_LASTCHANGE 7
#define DEVICE_FIREWALL_LEVELNUMBEROFENTRIES 8
#define DEVICE_FIREWALL_CHAINNUMBEROFENTRIES 9
#define DEVICE_FIREWALL_LEVEL 10
#define DEVICE_FIREWALL_LEVEL_ALIAS 11
#define DEVICE_FIREWALL_LEVEL_NAME 12
#define DEVICE_FIREWALL_LEVEL_DESCRIPTION 13
#define DEVICE_FIREWALL_LEVEL_ORDER 14
#define DEVICE_FIREWALL_LEVEL_CHAIN 15
#define DEVICE_FIREWALL_LEVEL_PORTMAPPINGENABLED 16
#define DEVICE_FIREWALL_LEVEL_DEFAULTPOLICY 17
#define DEVICE_FIREWALL_LEVEL_DEFAULTLOGPOLICY 18
#define DEVICE_FIREWALL_CHAIN 19
#define DEVICE_FIREWALL_CHAIN_ENABLE 20
#define DEVICE_FIREWALL_CHAIN_ALIAS 21
#define DEVICE_FIREWALL_CHAIN_NAME 22
#define DEVICE_FIREWALL_CHAIN_CREATOR 23
#define DEVICE_FIREWALL_CHAIN_RULENUMBEROFENTRIES 24
#define DEVICE_FIREWALL_CHAIN_RULE 25
#define DEVICE_FIREWALL_CHAIN_RULE_ENABLE 26
#define DEVICE_FIREWALL_CHAIN_RULE_STATUS 27
#define DEVICE_FIREWALL_CHAIN_RULE_ORDER 28
#define DEVICE_FIREWALL_CHAIN_RULE_ALIAS 29
#define DEVICE_FIREWALL_CHAIN_RULE_DESCRIPTION 30
#define DEVICE_FIREWALL_CHAIN_RULE_TARGET 31
#define DEVICE_FIREWALL_CHAIN_RULE_TARGETCHAIN 32
#define DEVICE_FIREWALL_CHAIN_RULE_LOG 33
#define DEVICE_FIREWALL_CHAIN_RULE_CREATIONDATE 34
#define DEVICE_FIREWALL_CHAIN_RULE_EXPIRYDATE 35
#define DEVICE_FIREWALL_CHAIN_RULE_SOURCEINTERFACE 36
#define DEVICE_FIREWALL_CHAIN_RULE_SOURCEINTERFACEEXCLUDE 37
#define DEVICE_FIREWALL_CHAIN_RULE_SOURCEALLINTERFACES 38
#define DEVICE_FIREWALL_CHAIN_RULE_DESTINTERFACE 39
#define DEVICE_FIREWALL_CHAIN_RULE_DESTINTERFACEEXCLUDE 40
#define DEVICE_FIREWALL_CHAIN_RULE_DESTALLINTERFACES 41
#define DEVICE_FIREWALL_CHAIN_RULE_IPVERSION 42
#define DEVICE_FIREWALL_CHAIN_RULE_DESTIP 43
#define DEVICE_FIREWALL_CHAIN_RULE_DESTMASK 44
#define DEVICE_FIREWALL_CHAIN_RULE_DESTIPEXCLUDE 45
#define DEVICE_FIREWALL_CHAIN_RULE_SOURCEIP 46
#define DEVICE_FIREWALL_CHAIN_RULE_SOURCEMASK 47
#define DEVICE_FIREWALL_CHAIN_RULE_SOURCEIPEXCLUDE 48
#define DEVICE_FIREWALL_CHAIN_RULE_PROTOCOL 49
#define DEVICE_FIREWALL_CHAIN_RULE_PROTOCOLEXCLUDE 50
#define DEVICE_FIREWALL_CHAIN_RULE_DESTPORT 51
#define DEVICE_FIREWALL_CHAIN_RULE_DESTPORTRANGEMAX 52
#define DEVICE_FIREWALL_CHAIN_RULE_DESTPORTEXCLUDE 53
#define DEVICE_FIREWALL_CHAIN_RULE_SOURCEPORT 54
#define DEVICE_FIREWALL_CHAIN_RULE_SOURCEPORTRANGEMAX 55
#define DEVICE_FIREWALL_CHAIN_RULE_SOURCEPORTEXCLUDE 56
#define DEVICE_FIREWALL_CHAIN_RULE_DSCP 57
#define DEVICE_FIREWALL_CHAIN_RULE_DSCPEXCLUDE 58
#define DEVICE_FIREWALL_CHAIN_RULE_X_LANTIQ_COM_FIREWALL_MACADDRESS 59
#define DEVICE_FIREWALL_X_LANTIQ_COM_PARENTALCONTROL 60
#define DEVICE_FIREWALL_X_LANTIQ_COM_PARENTALCONTROL_ENABLE 61
#define DEVICE_FIREWALL_X_LANTIQ_COM_PARENTALCONTROL_DEFAULTACTION 62
#define DEVICE_FIREWALL_X_LANTIQ_COM_PARENTALCONTROL_RULENUMBEROFENTRIES 63
#define DEVICE_FIREWALL_X_LANTIQ_COM_PARENTALCONTROL_RULE 64
#define DEVICE_FIREWALL_X_LANTIQ_COM_PARENTALCONTROL_RULE_ENABLE 65
#define DEVICE_FIREWALL_X_LANTIQ_COM_PARENTALCONTROL_RULE_TARGET 66
#define DEVICE_FIREWALL_X_LANTIQ_COM_PARENTALCONTROL_RULE_MACADDRESS 67
#define DEVICE_FIREWALL_X_LANTIQ_COM_PARENTALCONTROL_RULE_TIMESTART 68
#define DEVICE_FIREWALL_X_LANTIQ_COM_PARENTALCONTROL_RULE_TIMEEND 69
#define DEVICE_FIREWALL_X_LANTIQ_COM_PARENTALCONTROL_RULE_DAYSOFTHEWEEK 70

name_value_t x_Objs_nv[] =  { 
	{"Device.Firewall", DEVICE_FIREWALL},
	{"Device.Firewall.Level", DEVICE_FIREWALL_LEVEL},
	{"Device.Firewall.Chain", DEVICE_FIREWALL_CHAIN},
	{"Device.Firewall.Chain.Rule", DEVICE_FIREWALL_CHAIN_RULE},
	{"Device.Firewall.X_LANTIQ_COM_ParentalControl", DEVICE_FIREWALL_X_LANTIQ_COM_PARENTALCONTROL},
	{"Device.Firewall.X_LANTIQ_COM_ParentalControl.Rule", DEVICE_FIREWALL_X_LANTIQ_COM_PARENTALCONTROL_RULE},
};

typedef enum FirewallConfig {
	FIREWALL_CONFIG_HIGH,
	FIREWALL_CONFIG_LOW,
	FIREWALL_CONFIG_OFF,
	FIREWALL_CONFIG_ADVANCED,
} FirewallConfig_t;

typedef enum FirewallType {
	FIREWALL_TYPE_STATELESS,
	FIREWALL_TYPE_STATEFUL,
} FirewallType_t;

typedef enum Firewall_LevelDefaultPolicy {
	FIREWALL_LEVEL_DEFAULTPOLICY_DROP,
	FIREWALL_LEVEL_DEFAULTPOLICY_ACCEPT,
	FIREWALL_LEVEL_DEFAULTPOLICY_REJECT,
} Firewall_LevelDefaultPolicy_t;

typedef enum Firewall_ChainCreator {
	FIREWALL_CHAIN_CREATOR_DEFAULTS,
	FIREWALL_CHAIN_CREATOR_PORTMAPPING,
	FIREWALL_CHAIN_CREATOR_WANIPV6FIREWALLCONTROL,
	FIREWALL_CHAIN_CREATOR_ACS,
	FIREWALL_CHAIN_CREATOR_USERINTERFACE,
	FIREWALL_CHAIN_CREATOR_OTHER,
} Firewall_ChainCreator_t;

typedef enum Firewall_Chain_RuleStatus {
	FIREWALL_CHAIN_RULE_STATUS_DISABLED,
	FIREWALL_CHAIN_RULE_STATUS_ENABLED,
	FIREWALL_CHAIN_RULE_STATUS_ERROR,
} Firewall_Chain_RuleStatus_t;

typedef enum Firewall_Chain_RuleTarget {
	FIREWALL_CHAIN_RULE_TARGET_DROP,
	FIREWALL_CHAIN_RULE_TARGET_ACCEPT,
	FIREWALL_CHAIN_RULE_TARGET_REJECT,
	FIREWALL_CHAIN_RULE_TARGET_RETURN,
	FIREWALL_CHAIN_RULE_TARGET_TARGETCHAIN,
} Firewall_Chain_RuleTarget_t;

typedef enum Firewall_X_LANTIQ_COM_ParentalControl_RuleTarget {
	FIREWALL_X_LANTIQ_COM_PARENTALCONTROL_RULE_TARGET_DROP,
	FIREWALL_X_LANTIQ_COM_PARENTALCONTROL_RULE_TARGET_ACCEPT,
	FIREWALL_X_LANTIQ_COM_PARENTALCONTROL_RULE_TARGET_REJECT,
	FIREWALL_X_LANTIQ_COM_PARENTALCONTROL_RULE_TARGET_RETURN,
	FIREWALL_X_LANTIQ_COM_PARENTALCONTROL_RULE_TARGET_TARGETCHAIN,
} Firewall_X_LANTIQ_COM_ParentalControl_RuleTarget_t;

name_value_t FirewallConfig_nv [] = { 
	{"High", FIREWALL_CONFIG_HIGH},
	{"Low", FIREWALL_CONFIG_LOW},
	{"Off", FIREWALL_CONFIG_OFF},
	{"Advanced", FIREWALL_CONFIG_ADVANCED},
};

name_value_t FirewallType_nv [] = { 
	{"Stateless", FIREWALL_TYPE_STATELESS},
	{"Stateful", FIREWALL_TYPE_STATEFUL},
};

name_value_t Firewall_LevelDefaultPolicy_nv [] = { 
	{"Drop", FIREWALL_LEVEL_DEFAULTPOLICY_DROP},
	{"Accept", FIREWALL_LEVEL_DEFAULTPOLICY_ACCEPT},
	{"Reject", FIREWALL_LEVEL_DEFAULTPOLICY_REJECT},
};

name_value_t Firewall_ChainCreator_nv [] = { 
	{"Defaults", FIREWALL_CHAIN_CREATOR_DEFAULTS},
	{"PortMapping", FIREWALL_CHAIN_CREATOR_PORTMAPPING},
	{"WANIPv6FirewallControl", FIREWALL_CHAIN_CREATOR_WANIPV6FIREWALLCONTROL},
	{"ACS", FIREWALL_CHAIN_CREATOR_ACS},
	{"UserInterface", FIREWALL_CHAIN_CREATOR_USERINTERFACE},
	{"Other", FIREWALL_CHAIN_CREATOR_OTHER},
};

name_value_t Firewall_Chain_RuleStatus_nv [] = { 
	{"Disabled", FIREWALL_CHAIN_RULE_STATUS_DISABLED},
	{"Enabled", FIREWALL_CHAIN_RULE_STATUS_ENABLED},
	{"Error", FIREWALL_CHAIN_RULE_STATUS_ERROR},
};

name_value_t Firewall_Chain_RuleTarget_nv [] = { 
	{"Drop", FIREWALL_CHAIN_RULE_TARGET_DROP},
	{"Accept", FIREWALL_CHAIN_RULE_TARGET_ACCEPT},
	{"Reject", FIREWALL_CHAIN_RULE_TARGET_REJECT},
	{"Return", FIREWALL_CHAIN_RULE_TARGET_RETURN},
	{"TargetChain", FIREWALL_CHAIN_RULE_TARGET_TARGETCHAIN},
};

name_value_t Firewall_X_LANTIQ_COM_ParentalControl_RuleTarget_nv [] = { 
	{"Drop", FIREWALL_X_LANTIQ_COM_PARENTALCONTROL_RULE_TARGET_DROP},
	{"Accept", FIREWALL_X_LANTIQ_COM_PARENTALCONTROL_RULE_TARGET_ACCEPT},
	{"Reject", FIREWALL_X_LANTIQ_COM_PARENTALCONTROL_RULE_TARGET_REJECT},
	{"Return", FIREWALL_X_LANTIQ_COM_PARENTALCONTROL_RULE_TARGET_RETURN},
	{"TargetChain", FIREWALL_X_LANTIQ_COM_PARENTALCONTROL_RULE_TARGET_TARGETCHAIN},
};

typedef struct Firewall_X_LANTIQ_COM_ParentalControl_Rule{
	bool bEnable;
	Firewall_X_LANTIQ_COM_ParentalControl_RuleTarget_t eTarget;
	char sMACAddress[256];
	char sTimeStart[256];
	char sTimeEnd[256];
	char sDaysOfTheWeek[256];
	ParamMap_t xParamMap;
} Firewall_X_LANTIQ_COM_ParentalControl_Rule_t;

typedef struct Firewall_X_LANTIQ_COM_ParentalControl{
	bool bEnable;
	bool bDefaultAction;
	unsigned int unRuleNumberOfEntries;
	Firewall_X_LANTIQ_COM_ParentalControl_Rule_t pFirewall_X_LANTIQ_COM_ParentalControl_Rule;
	ParamMap_t xParamMap;
} Firewall_X_LANTIQ_COM_ParentalControl_t;

typedef struct Firewall_Chain_Rule{
	bool bEnable;
	Firewall_Chain_RuleStatus_t eStatus;
	unsigned int unOrder;

	char sDescription[256];
	Firewall_Chain_RuleTarget_t eTarget;
	char sTargetChain[64];
	bool bLog;


	char sSourceInterface[256];
	bool bSourceInterfaceExclude;
	bool bSourceAllInterfaces;
	char sDestInterface[256];
	bool bDestInterfaceExclude;
	bool bDestAllInterfaces;
	int nIPVersion;


	bool bDestIPExclude;


	bool bSourceIPExclude;
	int nProtocol;
	bool bProtocolExclude;
	int nDestPort;
	int nDestPortRangeMax;
	bool bDestPortExclude;
	int nSourcePort;
	int nSourcePortRangeMax;
	bool bSourcePortExclude;
	int nDSCP;
	bool bDSCPExclude;
	char sX_LANTIQ_COM_FIREWALL_MACAddress[256];
	ParamMap_t xParamMap;
} Firewall_Chain_Rule_t;

typedef struct Firewall_Chain{
	bool bEnable;

	char sName[64];
	Firewall_ChainCreator_t eCreator;
	unsigned int unRuleNumberOfEntries;
	Firewall_Chain_Rule_t pFirewall_Chain_Rule;
	ParamMap_t xParamMap;
} Firewall_Chain_t;

typedef struct Firewall_Level{

	char sName[64];
	char sDescription[256];
	unsigned int unOrder;
	char sChain[64];
	bool bPortMappingEnabled;
	Firewall_LevelDefaultPolicy_t eDefaultPolicy;
	bool bDefaultLogPolicy;
	ParamMap_t xParamMap;
} Firewall_Level_t;

typedef struct Firewall{
	bool bEnable;
	FirewallConfig_t eConfig;
	char sAdvancedLevel[64];
	FirewallType_t eType;
	char sVersion[16];

	unsigned int unLevelNumberOfEntries;
	unsigned int unChainNumberOfEntries;
	Firewall_Level_t pFirewall_Level;
	Firewall_Chain_t pFirewall_Chain;
	Firewall_X_LANTIQ_COM_ParentalControl_t pFirewall_X_LANTIQ_COM_ParentalControl;
	ParamMap_t xParamMap;
} Firewall_t;

typedef struct Device {
	Firewall_t pFirewall;
	ParamMap_t xParamMap;
} Device_t;

