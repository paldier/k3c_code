#!/bin/sh

# Uninit Wave driver and clean the environment
# Needed object: None

script_name="$0"

# If fapi_wlan_wave_lib_common.sh link in /tmp/wlan_wave is broken, source directly from scripts folder
# Support Puma and UGW paths
if [ ! "$LIB_COMMON_SOURCED" ]
then
	if [ -e /tmp/wlan_wave/fapi_wlan_wave_lib_common.sh ]
	then
		. /tmp/wlan_wave/fapi_wlan_wave_lib_common.sh
	elif [ -e /opt/lantiq/wave/scripts/fapi_wlan_wave_lib_common.sh ]
	then
		. /opt/lantiq/wave/scripts/fapi_wlan_wave_lib_common.sh
	elif [ -e /etc/wave/scripts/fapi_wlan_wave_lib_common.sh ]
	then
		. /etc/wave/scripts/fapi_wlan_wave_lib_common.sh
	fi
fi

# Find the interface index of wlan0
interface_index=`find_index_from_interface_name wlan0`

timestamp $interface_index "$script_name:begin"
print2log $interface_index DEBUG "$script_name $*"

# Delete the runner file
rm -f ${CONF_DIR}/${FAPI_WLAN_WAVE_RUNNNER}

# rmmod HS2.0 related drivers
[ -e ${ETC_PATH}/wave_wifi_parp_ctrl.sh ] && echo "(. $ETC_PATH/wave_wifi_parp_ctrl.sh stop)" >> ${CONF_DIR}/${FAPI_WLAN_WAVE_RUNNNER}
[ -e ${ETC_PATH}/wave_wifi_l2f_ctrl.sh ] && echo "(. $ETC_PATH/wave_wifi_l2f_ctrl.sh stop)" >> ${CONF_DIR}/${FAPI_WLAN_WAVE_RUNNNER}
[ -e ${ETC_PATH}/wmdctrl.sh ] && echo "(. $ETC_PATH/wmdctrl.sh stop)" >> ${CONF_DIR}/${FAPI_WLAN_WAVE_RUNNNER}

# rmmod WAVE driver
if [ `lsmod | grep "mtlk " -c` -gt 0  ]
then
	# In mtlkroot.ko insmod we pass to the driver the Netlink ID to reuse it on Netlink create.
	# Therefore, before removing driver, use iwpriv to read the ID that the kernel allocated, save it in file.
	mtlk_genl_family_id=`iwpriv wlan0 gGenlFamilyId | sed 's/.*gGenlFamilyId://'`
	if [ "$mtlk_genl_family_id" != "" ]
	then
		echo "echo $mtlk_genl_family_id > $GENL_FAMILY_ID_FILE" >> ${CONF_DIR}/${FAPI_WLAN_WAVE_RUNNNER}
	fi
	echo "rmmod mtlk" >> ${CONF_DIR}/${FAPI_WLAN_WAVE_RUNNNER}
	#TODO: add check for rmmod success.
fi

# Bring down the logger interface and remove it from the bridge
echo "ifconfig rtlog0 down" >> ${CONF_DIR}/${FAPI_WLAN_WAVE_RUNNNER}
echo "brctl delif br-lan rtlog0" >> ${CONF_DIR}/${FAPI_WLAN_WAVE_RUNNNER}

# rmmod RTLogger
if [ `lsmod | grep -c "mtlkroot"` -gt 0 ]
then
	echo "killall mtdump 2>/dev/null" >> ${CONF_DIR}/${FAPI_WLAN_WAVE_RUNNNER}
	# Unload driver
	echo "rmmod mtlkroot" >> ${CONF_DIR}/${FAPI_WLAN_WAVE_RUNNNER}
	# Kill logserver
	echo "killall logserver 2>/dev/null" >> ${CONF_DIR}/${FAPI_WLAN_WAVE_RUNNNER}
	#TODO: add check for rmmod success.
fi
# Stop drvhlpr
echo "killall drvhlpr 2>/dev/null" >> ${CONF_DIR}/${FAPI_WLAN_WAVE_RUNNNER}
echo "drvhlpr_count=\`ps | grep drvhlpr -c\`" >> ${CONF_DIR}/${FAPI_WLAN_WAVE_RUNNNER}
echo "while [ "\$drvhlpr_count" -gt 1 ]; do sleep 1; drvhlpr_count=\`ps | grep drvhlpr -c\`; done" >> ${CONF_DIR}/${FAPI_WLAN_WAVE_RUNNNER}

# Remove related soflinks and folder from /tmp/wlan_wave
echo "cd /tmp/" >> ${CONF_DIR}/${FAPI_WLAN_WAVE_RUNNNER}
echo "rm -rf mtlk*.ko *_scd_file.scd ${CONF_DIR}/crda* ${CONF_DIR}/runner* ${CONF_DIR}/*conf ${CONF_DIR}/*txt ${CONF_DIR}/${INTERFACES_STATUS}* ${CONF_DIR}/*status* ${CONF_DIR}/*conf* ${CONF_DIR}/*vaps* ${CONF_DIR}/mtlk* ${CONF_DIR}/*scan* \`cd $IMAGES_PATH/; ls *; cd - > /dev/null\`" >> ${CONF_DIR}/${FAPI_WLAN_WAVE_RUNNNER}

# Execute the runner
chmod +x ${CONF_DIR}/${FAPI_WLAN_WAVE_RUNNNER}
${CONF_DIR}/${FAPI_WLAN_WAVE_RUNNNER}

print2log $interface_index DEBUG "$script_name done"
timestamp $interface_index "$script_name:done"
