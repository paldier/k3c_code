#!/bin/sh
# Configure AccessPoint.AC parameters
# Needed object: AccessPoint.AC

script_name="$0"

[ ! "$LIB_COMMON_SOURCED" ] && . /tmp/fapi_wlan_wave_lib_common.sh
[ ! "$LIB_CONVERT_SOURCED" ] && . /tmp/fapi_wlan_wave_lib_convert.sh

interface_name=$1
pid=$$

# Find the interface index and the radio index
interface_index=`find_index_from_interface_name $interface_name`
radio_name=${interface_name%%.*}
radio_index=`find_index_from_interface_name $radio_name`

print2log $radio_index DEBUG "$script_name $*"
timestamp $radio_index "$script_name:begin"

# DEBUG: set debug_save_conf in fapi_wlan_wave_lib_common.sh to save the in conf file
[ "$debug_save_conf" ] && cp ${IN_CONF} ${CONF_DIR}/wmm_ap_set_in_conf_${interface_name}

comment="___WMM_parameters___###"

# Define list of WMM parameters
hostapd_phy_params="wmm_ac_be_aifs
wmm_ac_be_cwmin
wmm_ac_be_cwmax
wmm_ac_be_txop_limit
wmm_ac_bk_aifs
wmm_ac_bk_cwmin
wmm_ac_bk_cwmax
wmm_ac_bk_txop_limit
wmm_ac_vi_aifs
wmm_ac_vi_cwmin
wmm_ac_vi_cwmax
wmm_ac_vi_txop_limit
wmm_ac_vo_aifs
wmm_ac_vo_cwmin
wmm_ac_vo_cwmax
wmm_ac_vo_txop_limit"
# TODO: currently, TR181 is missing the following WMM parameters:
# tx_queue_data0_aifs, tx_queue_data0_cwmin, tx_queue_data0_cwmax, tx_queue_data0_burst
# tx_queue_data1_aifs, tx_queue_data1_cwmin, tx_queue_data1_cwmax, tx_queue_data1_burst
# tx_queue_data2_aifs, tx_queue_data2_cwmin, tx_queue_data2_cwmax, tx_queue_data2_burst
# tx_queue_data3_aifs, tx_queue_data3_cwmin, tx_queue_data3_cwmax, tx_queue_data3_burst

# WMM parameters are for radio only
is_vap=`check_is_vap $interface_name`

if [ "$is_vap" = "false" ]
then
	# Map the objects indexes to the received objects in the in.conf file
	BE_index=`map_param_index AccessCategory BE`
	BK_index=`map_param_index AccessCategory BK`
	VI_index=`map_param_index AccessCategory VI`
	VO_index=`map_param_index AccessCategory VO`

	# Save the input configuration parameters to a local DB used by Wave FAPI
	[ -n "$BE_index" ] && save_db_params wmm_ap_set_be $interface_name $BE_index $interface_index
	[ -n "$BK_index" ] && save_db_params wmm_ap_set_bk $interface_name $BK_index $interface_index
	[ -n "$VI_index" ] && save_db_params wmm_ap_set_vi $interface_name $VI_index $interface_index
	[ -n "$VO_index" ] && save_db_params wmm_ap_set_vo $interface_name $VO_index $interface_index

	# Read current values and initiate new values file.
	hostapd_phy_current_values=${CONF_DIR}/hostapd_phy_current_values_${interface_name}_${pid}
	read_current_values $HOSTAPD_PHY_CONF_PREFIX $interface_name $hostapd_phy_current_values

	# Prepare the temporary configuration files to use
	prepare_confs $interface_name $radio_name $pid $VAP
	# Get the pid to use in this configuration session
	. ${CONF_IN_PROGRESS}_${radio_name}

	# Calculate new values.
	# Source BE WMM DB
	local_db_source WMM_BE
	wmm_ac_be_aifs=`db2fapi_convert regular AIFSN $interface_index`
	wmm_ac_be_cwmin=`db2fapi_convert regular ECWMin $interface_index`
	wmm_ac_be_cwmax=`db2fapi_convert regular ECWMax $interface_index`
	wmm_ac_be_txop_limit=`db2fapi_convert regular TxOpMax $interface_index`
	# Source BK WMM DB
	local_db_source WMM_BK
	wmm_ac_bk_aifs=`db2fapi_convert regular AIFSN $interface_index`
	wmm_ac_bk_cwmin=`db2fapi_convert regular ECWMin $interface_index`
	wmm_ac_bk_cwmax=`db2fapi_convert regular ECWMax $interface_index`
	wmm_ac_bk_txop_limit=`db2fapi_convert regular TxOpMax $interface_index`
	# Source VI WMM DB
	local_db_source WMM_VI
	wmm_ac_vi_aifs=`db2fapi_convert regular AIFSN $interface_index`
	wmm_ac_vi_cwmin=`db2fapi_convert regular ECWMin $interface_index`
	wmm_ac_vi_cwmax=`db2fapi_convert regular ECWMax $interface_index`
	wmm_ac_vi_txop_limit=`db2fapi_convert regular TxOpMax $interface_index`
	# Source VO WMM DB
	local_db_source WMM_VO
	wmm_ac_vo_aifs=`db2fapi_convert regular AIFSN $interface_index`
	wmm_ac_vo_cwmin=`db2fapi_convert regular ECWMin $interface_index`
	wmm_ac_vo_cwmax=`db2fapi_convert regular ECWMax $interface_index`
	wmm_ac_vo_txop_limit=`db2fapi_convert regular TxOpMax $interface_index`

	# Write the parameters to the configuration files.
	# Check if a hostapd parameter was changed.
	hostapd_phy_changed=`check_param_changed "$hostapd_phy_params"`

	# If a hostapd phy parameter was changed, remove wmm parameters from hostapd_phy temp conf file and write all of them with updated values.
	if [ "$hostapd_phy_changed" ]
	then
		hostapd_phy_conf_name=${CONF_DIR}/hostapd_phy_${interface_name}_${pid}.conf
		remove_params_from_conf "###$comment $hostapd_phy_params" $hostapd_phy_conf_name $HOSTAPD_PHY_CONF_PREFIX

		# Write the hostapd phy wmm parameters.
		set_conf_param hostapd_phy comment otf $pid $interface_name comment "$comment"
		set_conf_param hostapd_phy regular no_otf $pid $interface_name wmm_ac_be_aifs "$wmm_ac_be_aifs"
		set_conf_param hostapd_phy regular no_otf $pid $interface_name wmm_ac_be_cwmin "$wmm_ac_be_cwmin"
		set_conf_param hostapd_phy regular no_otf $pid $interface_name wmm_ac_be_cwmax "$wmm_ac_be_cwmax"
		set_conf_param hostapd_phy regular no_otf $pid $interface_name wmm_ac_be_txop_limit "$wmm_ac_be_txop_limit"
		set_conf_param hostapd_phy regular no_otf $pid $interface_name wmm_ac_bk_aifs "$wmm_ac_bk_aifs"
		set_conf_param hostapd_phy regular no_otf $pid $interface_name wmm_ac_bk_cwmin "$wmm_ac_bk_cwmin"
		set_conf_param hostapd_phy regular no_otf $pid $interface_name wmm_ac_bk_cwmax "$wmm_ac_bk_cwmax"
		set_conf_param hostapd_phy regular no_otf $pid $interface_name wmm_ac_bk_txop_limit "$wmm_ac_bk_txop_limit"
		set_conf_param hostapd_phy regular no_otf $pid $interface_name wmm_ac_vi_aifs "$wmm_ac_vi_aifs"
		set_conf_param hostapd_phy regular no_otf $pid $interface_name wmm_ac_vi_cwmin "$wmm_ac_vi_cwmin"
		set_conf_param hostapd_phy regular no_otf $pid $interface_name wmm_ac_vi_cwmax "$wmm_ac_vi_cwmax"
		set_conf_param hostapd_phy regular no_otf $pid $interface_name wmm_ac_vi_txop_limit "$wmm_ac_vi_txop_limit"
		set_conf_param hostapd_phy regular no_otf $pid $interface_name wmm_ac_vo_aifs "$wmm_ac_vo_aifs"
		set_conf_param hostapd_phy regular no_otf $pid $interface_name wmm_ac_vo_cwmin "$wmm_ac_vo_cwmin"
		set_conf_param hostapd_phy regular no_otf $pid $interface_name wmm_ac_vo_cwmax "$wmm_ac_vo_cwmax"
		set_conf_param hostapd_phy regular no_otf $pid $interface_name wmm_ac_vo_txop_limit "$wmm_ac_vo_txop_limit"
	fi
fi

# Create the output configuration file
cat /dev/null > ${OUT_CONF}

# Configuration is completed successfully
update_conf_out "wlan_configuration_status" "success"

# DEBUG: set debug_save_conf in fapi_wlan_wave_lib_common.sh to save the out conf file
[ "$debug_save_conf" ] && cp ${OUT_CONF} ${CONF_DIR}/wmm_ap_set_out_conf_${interface_name}

print2log $radio_index DEBUG "$script_name done"
timestamp $radio_index "$script_name:done"
