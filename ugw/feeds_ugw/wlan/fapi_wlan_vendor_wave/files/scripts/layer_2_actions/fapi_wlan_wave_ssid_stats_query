#!/bin/sh

# Return the SSID Stats
# Needed object: SSID.Stats

# Source library script
[ ! "$FAPI_WLAN_WAVE_INIT_PLATFORM" ] && . /tmp/wlan_wave/fapi_wlan_wave_init_platform.sh

print2log DBG "running fapi_wlan_wave_ssid_stats_query: args: $*"

interface_name=$1

# If interface name is not supplied, exit script
check_input_param "fapi_wlan_wave_ssid_stats_query" "interface_name" "$interface_name"

timestamp "fapi_wlan_wave_ssid_stats_query:$interface_name:begin"

wlanInitIncomplete=`check_if_is_ready $interface_name`
[ "$wlanInitIncomplete" = "1" ] && exit

# DEBUG: TODO: REMOVE
#cp ${IN_CONF} ${WAVE_TMP}/in_conf_ssid_stats

# Map the objects indexes to the received objects in the in.conf file
ssid_stats_index=`map_param_index Object $SSID_STATS_OBJECT`

# If an object that needs to be in the output conf wasn't in the input conf, set it with an index
[ -z "$ssid_stats_index" ] && next_object_index=`get_next_object_index` && ssid_stats_index=$next_object_index

# Read from the driver all the SSID.Stats statistics
bytes_sent_successfully=0
bytes_received=0
packets_transmitted=0
packets_received=0
errors_sent=0
retrans_count=0
failed_retrans_count=0
retry_count=0
multiple_retry_count=0
ack_failure_count=0
aggregated_packet_count=0
errors_received=0
unicast_packets_transmitted=0
unicast_packets_received=0
discard_packets_sent=0
discard_packets_received=0
multicast_packets_transmitted=0
multicast_packets_received=0
broadcast_packets_transmitted=0
broadcast_packets_received=0
unknown_proto_packets_received=0

# Read statistics once, to temp files
api_wrapper get ifconfig $interface_name \> $WAVE_TMP/tmp_ifconfig
api_wrapper get ${BINDIR}/mtdump $interface_name WLANFlowStatus  -f ${BINDIR}/mtdump.mtidlc_WLANFlowStatus \> $WAVE_TMP/tmp_mtdump
# Delete first line from the mtdump results
sed -i '1d' $WAVE_TMP/tmp_mtdump

# Read statistics from mtdump results: for each line save the value and the text after "Number of" as a parameter name
while read value colon number of param1 param2 param3 param4; do
	if [ -z $param3 ]; then
		eval ${param1}_${param2}=${value}
	else
		eval ${param1}_${param2}_${param3}=${value}
	fi
done < $WAVE_TMP/tmp_mtdump
	
rx_packets_line=`grep "RX packets" $WAVE_TMP/tmp_ifconfig | xargs`
tx_packets_line=`grep "TX packets" $WAVE_TMP/tmp_ifconfig | xargs`

errors_received=${rx_packets_line#RX packets:*:}
errors_received=${errors_received%% *}
discard_packets_received=${rx_packets_line#RX packets:*:*:}
discard_packets_received=${discard_packets_received%% *}
errors_sent=${tx_packets_line#TX packets:*:}
errors_sent=${errors_sent%% *}
discard_packets_sent=${tx_packets_line#TX packets:*:*:}
discard_packets_sent=${discard_packets_sent%% *}

# TODO: how to get the following stats (do we need them?)
#RetransCount
#FailedRetransCount
#RetryCount
#MultipleRetryCount
#ACKFailureCount
#AggregatedPacketCount
#UnknownProtoPacketsReceived

rm -f $WAVE_TMP/tmp_ifconfig $WAVE_TMP/tmp_mtdump

# Create the output configuration file and set the statistics in it
cat /dev/null > ${OUT_CONF}

update_conf_out "Object_${ssid_stats_index}" "$SSID_STATS_OBJECT"
update_conf_out "BytesSent_${ssid_stats_index}" "$bytes_sent_successfully"
update_conf_out "BytesReceived_${ssid_stats_index}" "$bytes_received"
update_conf_out "PacketsSent_${ssid_stats_index}" "$packets_transmitted"
update_conf_out "PacketsReceived_${ssid_stats_index}" "$packets_received"
update_conf_out "ErrorsSent_${ssid_stats_index}" "$errors_sent"
update_conf_out "RetransCount_${ssid_stats_index}" "$retrans_count"
update_conf_out "FailedRetransCount_${ssid_stats_index}" "$failed_retrans_count"
update_conf_out "RetryCount_${ssid_stats_index}" "$retry_count"
update_conf_out "MultipleRetryCount_${ssid_stats_index}" "$multiple_retry_count"
update_conf_out "ACKFailureCount_${ssid_stats_index}" "$ack_failure_count"
update_conf_out "AggregatedPacketCount_${ssid_stats_index}" "$aggregated_packet_count"
update_conf_out "ErrorsReceived_${ssid_stats_index}" "$errors_received"
update_conf_out "UnicastPacketsSent_${ssid_stats_index}" "$unicast_packets_transmitted"
update_conf_out "UnicastPacketsReceived_${ssid_stats_index}" "$unicast_packets_received"
update_conf_out "DiscardPacketsSent_${ssid_stats_index}" "$discard_packets_sent"
update_conf_out "DiscardPacketsReceived_${ssid_stats_index}" "$discard_packets_received"
update_conf_out "MulticastPacketsSent_${ssid_stats_index}" "$multicast_packets_transmitted"
update_conf_out "MulticastPacketsReceived_${ssid_stats_index}" "$multicast_packets_received"
update_conf_out "BroadcastPacketsSent_${ssid_stats_index}" "$broadcast_packets_transmitted"
update_conf_out "BroadcastPacketsReceived_${ssid_stats_index}" "$broadcast_packets_received"
update_conf_out "UnknownProtoPacketsReceived_${ssid_stats_index}" "$unknown_proto_packets_received"

# Configuration is completed successfully
update_conf_out "wlan_configuration_status" "success"

# DEBUG: TODO: REMOVE
#cp ${OUT_CONF} ${WAVE_TMP}/out_conf_ssid_stats

print2log DBG "fapi_wlan_wave_ssid_stats_query done"
timestamp "fapi_wlan_wave_ssid_stats_query:$interface_name:done"
