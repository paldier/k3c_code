#!/bin/sh
# Return the AccessPoint capabilities
# Needed object: None or AccessPoint and/or AccessPoint.Security and/or AccessPoint.WPS and/or AccessPoint.Vendor.WPS

script_name="$0"
wlanInitIncomplete=0

[ ! "$LIB_COMMON_SOURCED" ] && . /tmp/fapi_wlan_wave_lib_common.sh

interface_name=$1

# Find the radio index
radio_name=${interface_name%%.*}
radio_index=`find_index_from_interface_name $radio_name`

print2log $radio_index DBG "$script_name $*"
timestamp $radio_index "$script_name:$interface_name:begin"

# If interface name is not supplied, exit script
[ -z "$interface_name" ] && print2log $radio_index ALERT "$script_name: interface_name is missing. exit execution" && exit 1

# Verify interface is up and ready. If not, exit
[ `check_interface_is_ready $interface_name` = "1" ] && exit

# DEBUG: set debug_save_conf in fapi_wlan_wave_lib_common.sh to save the in conf file
[ "$debug_save_conf" ] && cp ${IN_CONF} ${CONF_DIR}/ap_capability_in_conf_${interface_name}

# Map the objects indexes to the received objects in the in.conf file
accesspoint_index=`map_param_index Object $ACCESSPOINT_OBJECT`
security_index=`map_param_index Object $ACCESSPOINT_SECURITY_OBJECT`
wps_index=`map_param_index Object $ACCESSPOINT_WPS_OBJECT`
wps_vendor_index=`map_param_index Object $ACCESSPOINT_WPS_VENDOR_OBJECT`

# If an object that needs to be in the output conf wasn't in the input conf, set it with an index
next_object_index=`get_next_object_index`
[ -z "$accesspoint_index" ] && accesspoint_index=$next_object_index && next_object_index=$((next_object_index+1))
[ -z "$security_index" ] && security_index=$next_object_index && next_object_index=$((next_object_index+1))
[ -z "$wps_index" ] && wps_index=$next_object_index && next_object_index=$((next_object_index+1))
[ -z "$wps_vendor_index" ] && wps_vendor_index=$next_object_index && next_object_index=$((next_object_index+1))

# Accesspoint capabilities have hardcoded values.
wmm_capability="true"
uapsd_capability="true"
modes_supported="None,WEP-64,WEP-128,WPA-Personal,WPA2-Personal,WPA-WPA2-Personal,WPA-Enterprise,WPA2-Enterprise,WPA-WPA2-Enterprise"
config_methods_supported="PushButton,PIN" # These are only WPS1.0 methods. WPS2.0 methods appear in WPS.Vendor object.
wps2_config_methods_supported="label,virtual_display,push_button,virtual_push_button"

# Create the output configuration file and set the capapabilities in it
cat /dev/null > ${OUT_CONF}

# Return only the requested capabilities
# If conf input is empty, return all capabilities
if [ `wc -c < ${IN_CONF}` = "0" ]
then
	update_conf_out "Object_${accesspoint_index}" "$ACCESSPOINT_OBJECT"
	update_conf_out "WMMCapability_${accesspoint_index}" "$wmm_capability"
	update_conf_out "UAPSDCapability_${accesspoint_index}" "$uapsd_capability"
	update_conf_out "Object_${security_index}" "$ACCESSPOINT_SECURITY_OBJECT"
	update_conf_out "ModesSupported_${security_index}" "$modes_supported"
	update_conf_out "Object_${wps_index}" "$ACCESSPOINT_WPS_OBJECT"
	update_conf_out "ConfigMethodsSupported_${wps_index}" "$config_methods_supported"
	update_conf_out "Object_${wps_vendor_index}" "$ACCESSPOINT_WPS_VENDOR_OBJECT"
	update_conf_out "WPS2ConfigMethodsSupported_${wps_index}" "$wps2_config_methods_supported"
fi

while read capability
do
	capab_name=${capability%%_*}
	case $capab_name in
		"Object")
			object_index=${capability##*_}
			object_index=${object_index%%=*}
			object_name=${capability##*=}
			update_conf_out "Object_${object_index}" "$object_name"
			;;
		"WMMCapability")
			update_conf_out "WMMCapability_${object_index}" "$wmm_capability"
			;;
		"UAPSDCapability")
			update_conf_out "UAPSDCapability_${object_index}" "$uapsd_capability"
			;;
		"ModesSupported")
			update_conf_out "ModesSupported_${object_index}" "$modes_supported"
			;;
		"ConfigMethodsSupported")
			update_conf_out "ConfigMethodsSupported_${object_index}" "$config_methods_supported"
			;;
		"WPS2ConfigMethodsSupported")
			update_conf_out "WPS2ConfigMethodsSupported_${object_index}" "$wps2_config_methods_supported"
			;;
	esac
done < ${IN_CONF}

# Configuration is completed successfully
update_conf_out "wlan_configuration_status" "success"

# DEBUG: set debug_save_conf in fapi_wlan_wave_lib_common.sh to save the out conf file
[ "$debug_save_conf" ] && cp ${OUT_CONF} ${CONF_DIR}/ap_capability_out_conf_${interface_name}

print2log $radio_index DEBUG "$script_name done"
timestamp $radio_index "$script_name:$interface_name:done"
