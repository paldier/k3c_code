#!/bin/sh
# Configure AccessPoint.Security parameters
# Needed object: AccessPoint.Security, AccessPoint.X_LANTIQ_COM_Vendor.Security

script_name="$0"

[ ! "$LIB_COMMON_SOURCED" ] && . /tmp/fapi_wlan_wave_lib_common.sh
[ ! "$LIB_CONVERT_SOURCED" ] && . /tmp/fapi_wlan_wave_lib_convert.sh

interface_name=$1
pid=$$

# Find the interface index and the radio index
interface_index=`find_index_from_interface_name $interface_name`
radio_name=${interface_name%%.*}
radio_index=`find_index_from_interface_name $radio_name`

print2log $radio_index DEBUG "$script_name $*"
timestamp $radio_index "$script_name:begin"

# DEBUG: set debug_save_conf in fapi_wlan_wave_lib_common.sh to save the in conf file
[ "$debug_save_conf" ] && cp ${IN_CONF} ${CONF_DIR}/security_set_in_conf_${interface_name}

# Map the objects indexes to the received objects in the in.conf file
security_index=`map_param_index Object $ACCESSPOINT_SECURITY_OBJECT`
security_vendor_index=`map_param_index Object $ACCESSPOINT_SECURITY_VENDOR_OBJECT`

# Save the input configuration parameters to a local DB used by Wave FAPI
[ -n "$security_index" ] && save_db_params security_set $interface_name $security_index $interface_index
[ -n "$security_vendor_index" ] && save_db_params security_set $interface_name $security_vendor_index $interface_index
# Source SECURITY
local_db_source SECURITY

comment="___Security_parameters___###"

# Define list of security parameters
hostapd_params="auth_algs
eapol_key_index_workaround
wpa
eap_server
wep_default_key
wep_key0
wpa_key_mgmt
wpa_passphrase
wpa_psk
wpa_group_rekey
wpa_gmk_rekey
wpa_pairwise
rsn_pairwise
osen
ieee8021x
auth_server_addr
auth_server_port
auth_server_shared_secret
acct_server_addr
acct_server_port
acct_server_shared_secret
eap_reauth_period
ieee80211w
assoc_sa_query_max_timeout
assoc_sa_query_retry_timeout"

# Prepare the temporary configuration files to use
prepare_confs $interface_name $radio_name $pid $VAP
# Get the pid to use in this configuration session
. ${CONF_IN_PROGRESS}_${radio_name}

# Read current values and initiate new values file.
hostapd_current_values=${CONF_DIR}/hostapd_current_values_${interface_name}_${pid}
read_current_values $HOSTAPD_VAP_CONF_PREFIX $interface_name $hostapd_current_values

# Calculate new values.
auth_algs=1
eapol_key_index_workaround=0
wep_default_key=""
wep_key0=""
rsn_pairwise=""
pmf_enabled=`db2fapi_convert boolean ManagementFrameProtection $interface_index`
pmf_required=`db2fapi_convert boolean ManagementFrameProtectionRequired $interface_index`

# Set values to parameters related to the ModeEnabled.
# If ModeEnabled is not set, value will be the default value in hostapd.
# auth_type parameter can be Personal or Enterprise
# security_type parameter can be None, WEP, WPA, WPA2
security_mode=`db2fapi_convert regular ModeEnabled $interface_index`
auth_type=${security_mode##*-}
security_type=${security_mode%%-*}
case "$security_mode" in
	"None")
		pmf_enabled=""
		wpa=0
		eap_server=1
		;;
	"WEP-64"|"WEP-128")
		pmf_enabled=""
		eap_server=1
		wep_default_key=0
		wep_key0=`db2fapi_convert regular WEPKey $interface_index`
		;;
	"WPA-Personal")
		pmf_enabled=""
		wpa=1
		wpa_pairwise="TKIP"
		eap_server=1
		;;
	"WPA2-Personal")
		wpa=2
		wpa_pairwise="CCMP"
		eap_server=1
		;;
	"WPA-WPA2-Personal")
		pmf_enabled=""
		wpa=3
		wpa_pairwise="TKIP"
		rsn_pairwise="CCMP"
		eap_server=1
		;;
	"WPA-Enterprise")
		pmf_enabled=""
		wpa=1
		wpa_pairwise="TKIP"
		ieee8021x=1
		eap_server=0
		;;
	"WPA2-Enterprise")
		pmf_enabled=""
		wpa=2
		wpa_pairwise="CCMP"
		ieee8021x=1
		eap_server=0
		;;
	"WPA-WPA2-Enterprise")
		pmf_enabled=""
		wpa=3
		wpa_pairwise="TKIP"
		rsn_pairwise="CCMP"
		ieee8021x=1
		eap_server=0
		;;
	# TODO: add osen
	#$osen)
	#	osen=1
	#	disable_dgaf=1
	#	;;
esac

### WPA and WPA2 parameters
wpa_passphrase=""
wpa_psk=""
wpa_key_mgmt=""
group_key_interval=""
wpa_group_rekey=""
wpa_gmk_rekey=""
if [ "$security_type" = "WPA" ] || [ "$security_type" = "WPA2" ]
then
	wpa_passphrase=`db2fapi_convert regular KeyPassphrase $interface_index`
	wpa_psk=`db2fapi_convert regular PreSharedKey $interface_index`
	wpa_key_mgmt=`convert_wpa_key_mgmt $security_mode $security_type $auth_type $pmf_enabled $pmf_required`
	group_key_interval=`db2fapi_convert regular RekeyingInterval $interface_index`
	wpa_group_rekey=$group_key_interval
	wpa_gmk_rekey=$group_key_interval
fi

### RADIUS parameters
ieee8021x=""
auth_server_addr=""
auth_server_port=""
auth_server_shared_secret=""
acct_server_addr=""
acct_server_port=""
acct_server_shared_secret=""
eap_reauth_period=""
if [ "$auth_type" = "Enterprise" ]
then
	ieee8021x=1
	server_addr=`db2fapi_convert regular RadiusServerIPAddr $interface_index`
	server_port=`db2fapi_convert regular RadiusServerPort $interface_index`
	server_shared_secret=`db2fapi_convert regular RadiusSecret $interface_index`
	auth_server_addr="$server_addr"
	auth_server_port="$server_port"
	auth_server_shared_secret="$server_shared_secret"
	acct_server_addr="$server_addr"
	acct_server_port=$((server_port+1))
	acct_server_shared_secret="$server_shared_secret"

	eap_reauth_period=`db2fapi_convert regular RekeyingInterval $interface_index`
fi

### 802.11w - PMF parameters
assoc_sa_query_max_timeout=""
assoc_sa_query_retry_timeout=""
if [ -n "$pmf_enabled" ]
then
	if [ "$pmf_enabled" = "0" ]
	then
		ieee80211w=0
	else
		[ -n "$pmf_required" ] && pmf_required=0
		ieee80211w=$((pmf_required+1))
		assoc_sa_query_max_timeout=`db2fapi_convert regular SAQueryMaxTimeout $interface_index`
		assoc_sa_query_retry_timeout=`db2fapi_convert regular SAQueryRetryTimeout $interface_index`
	fi
fi

# Check if a hostapd parameter was changed.
hostapd_changed=`check_param_changed "$hostapd_params"`

# If a hostapd parameter was changed, remove sec parameters from hostapd_vap temp conf file and write all of them with updated values.
if [ "$hostapd_changed" ]
then
	hostapd_vap_conf_name=${CONF_DIR}/hostapd_vap_${interface_name}_${pid}.conf
	# Remove the hostapd sec parameters.
	remove_params_from_conf "###$comment $hostapd_params" $hostapd_vap_conf_name $HOSTAPD_VAP_CONF_PREFIX

	# Write the hostapd sec parameters.
	set_conf_param hostapd_vap comment otf $pid $interface_name comment "$comment"
	set_conf_param hostapd_vap regular no_otf $pid $interface_name auth_algs "$auth_algs"
	set_conf_param hostapd_vap regular no_otf $pid $interface_name eapol_key_index_workaround "$eapol_key_index_workaround"
	set_conf_param hostapd_vap regular no_otf $pid $interface_name wpa "$wpa"
	set_conf_param hostapd_vap regular no_otf $pid $interface_name eap_server "$eap_server"

	# Write WEP parameters.
	set_conf_param hostapd_vap regular no_otf $pid $interface_name wep_default_key "$wep_default_key"
	set_conf_param hostapd_vap regular no_otf $pid $interface_name wep_key0 "$wep_key0"

	# Write wpa parameters
	set_conf_param hostapd_vap regular no_otf $pid $interface_name wpa_key_mgmt "$wpa_key_mgmt"
	set_conf_param hostapd_vap regular no_otf $pid $interface_name wpa_passphrase "$wpa_passphrase"
	set_conf_param hostapd_vap regular no_otf $pid $interface_name wpa_psk "$wpa_psk"
	set_conf_param hostapd_vap regular no_otf $pid $interface_name wpa_group_rekey "$wpa_group_rekey"
	set_conf_param hostapd_vap regular no_otf $pid $interface_name wpa_gmk_rekey "$wpa_gmk_rekey"
	set_conf_param hostapd_vap regular no_otf $pid $interface_name wpa_pairwise "$wpa_pairwise"
	set_conf_param hostapd_vap regular no_otf $pid $interface_name rsn_pairwise "$rsn_pairwise"

	# Write OSEN parameters
	set_conf_param hostapd_vap regular no_otf $pid $interface_name osen "$osen"
	#set_conf_param hostapd_vap regular no_otf $pid $interface_name disable_dgaf "$disable_dgaf"

	# Write radius parameters
	set_conf_param hostapd_vap regular no_otf $pid $interface_name ieee8021x "$ieee8021x"
	set_conf_param hostapd_vap regular no_otf $pid $interface_name auth_server_addr "$auth_server_addr"
	set_conf_param hostapd_vap regular no_otf $pid $interface_name auth_server_port "$auth_server_port"
	set_conf_param hostapd_vap regular no_otf $pid $interface_name auth_server_shared_secret "$auth_server_shared_secret"
	set_conf_param hostapd_vap regular no_otf $pid $interface_name acct_server_addr "$acct_server_addr"
	set_conf_param hostapd_vap regular no_otf $pid $interface_name acct_server_port "$acct_server_port"
	set_conf_param hostapd_vap regular no_otf $pid $interface_name acct_server_shared_secret "$acct_server_shared_secret"
	set_conf_param hostapd_vap regular no_otf $pid $interface_name eap_reauth_period "$eap_reauth_period"

	# Write 802.11w - PMF parameters
	set_conf_param hostapd_vap regular no_otf $pid $interface_name ieee80211w "$ieee80211w"
	set_conf_param hostapd_vap regular no_otf $pid $interface_name assoc_sa_query_max_timeout "$assoc_sa_query_max_timeout"
	set_conf_param hostapd_vap regular no_otf $pid $interface_name assoc_sa_query_retry_timeout "$assoc_sa_query_retry_timeout"
fi

# Create the output configuration file
cat /dev/null > ${OUT_CONF}

# Configuration is completed successfully
update_conf_out "wlan_configuration_status" "success"

# DEBUG: set debug_save_conf in fapi_wlan_wave_lib_common.sh to save the out conf file
[ "$debug_save_conf" ] && cp ${OUT_CONF} ${CONF_DIR}/security_set_out_conf_${interface_name}

print2log $radio_index DEBUG "$script_name done"
timestamp $radio_index "$script_name:done"
