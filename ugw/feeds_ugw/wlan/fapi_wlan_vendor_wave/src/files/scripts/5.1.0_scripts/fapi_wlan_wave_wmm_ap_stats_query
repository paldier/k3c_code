#!/bin/sh
# Return the AccessPoint AC Stats
# Needed object: AccessPoint.AC and/or AccessPoint.AC.Stats

script_name="$0"

[ ! "$LIB_COMMON_SOURCED" ] && . /tmp/fapi_wlan_wave_lib_common.sh
[ ! "$IN_CONF_SOURCED" ] && in_conf_source

interface_name=$1

# Find the radio index
radio_name=${interface_name%%.*}
radio_index=`find_index_from_interface_name $radio_name`

print2log $radio_index DEBUG "$script_name $*"
timestamp $radio_index "$script_name:begin"

# If interface name is not supplied, exit script
[ -z "$interface_name" ] && print2log $radio_index ALERT "$script_name: interface_name is missing. exit execution" && exit 1

# Verify interface is up and ready. If not, exit
[ `check_interface_is_ready $interface_name` = "1" ] && exit

# Map the objects indexes to the received objects in the in.conf file
wmm_index=`map_param_index Object $ACCESSPOINT_AC_OBJECT`
ac_stats_index=`get_next_object_index`

[ -z "$wmm_index" ] && wmm_index=$((ac_stats_index+1))
#ac_name=`get_conf_param access_category $wmm_index $interface_name`

# TEMPORARY WORKAROUND: if ac_name is not found, set BE
[ -z "$ac_name" ] && ac_name="BE"

# DEBUG: set debug_save_conf in fapi_wlan_wave_lib_common.sh to save the in conf file
[ "$debug_save_conf" ] && cp ${IN_CONF} ${CONF_DIR}/wmm_${ac_name}_stats_in_conf_${interface_name}

bytes_sent_successfully=0
bytes_received=0
packets_transmitted=0
packets_received=0
errors_sent=0
errors_received=0
discard_packets_sent=0
discard_packets_received=0
retrans_count=0
out_qlen_histogram=0
	
# TODO: how to read and return AC stats?
bytes_sent_successfully_stats()
{
	bytes_sent_successfully=0
}
bytes_received_stats()
{
	bytes_received=0
}

packets_transmitted_stats()
{
	packets_transmitted=0
}

packets_received_stats()
{
	packets_received=0
}

errors_sent_stats()
{
	errors_sent=0
}

errors_received_stats()
{
	errors_received=0
}

discard_packets_sent_stats()
{
	discard_packets_sent=0
}

discard_packets_received_stats()
{
	discard_packets_received=0
}

retrans_count_stats()
{
	retrans_count=0
}

out_qlen_histogram_stats()
{
	out_qlen_histogram=0
}

# Create the output configuration file and set the statistics in it
cat /dev/null > ${OUT_CONF}

# Return only the requested statistics
# If input.conf is empty, return all statistics
if [ `wc -c < ${IN_CONF}` = "0" ]
then
	update_conf_out "Object_${ac_stats_index}" "$ACCESSPOINT_AC_STATS_OBJECT"
	bytes_sent_successfully_stats
	update_conf_out "BytesSent_${ac_stats_index}" "$bytes_sent_successfully"
	bytes_received_stats
	update_conf_out "BytesReceived_${ac_stats_index}" "$bytes_received"
	packets_transmitted_stats
	update_conf_out "PacketsSent_${ac_stats_index}" "$packets_transmitted"
	packets_received_stats
	update_conf_out "PacketsReceived_${ac_stats_index}" "$packets_received"
	errors_sent_stats
	update_conf_out "ErrorsSent_${ac_stats_index}" "$errors_sent"
	errors_received_stats
	update_conf_out "ErrorsReceived_${ac_stats_index}" "$errors_received"
	discard_packets_sent_stats
	update_conf_out "DiscardPacketsSent_${ac_stats_index}" "$discard_packets_sent"
	discard_packets_received_stats
	update_conf_out "DiscardPacketsReceived_${ac_stats_index}" "$discard_packets_received"
	retrans_count_stats
	update_conf_out "RetransCount_${ac_stats_index}" "$retrans_count"
	out_qlen_histogram_stats
	update_conf_out "OutQLenHistogram_${ac_stats_index}" "$out_qlen_histogram"
fi

while read statistics
do
	stats_name=${statistics%%_*}
	case $stats_name in
		"Object")
			object_index=${statistics##*_}
			object_index=${object_index%%=*}
			object_name=${statistics##*=}
			update_conf_out "Object_${object_index}" "$object_name"
			;;
		"BytesSent")
			bytes_sent_successfully_stats
			update_conf_out "BytesReceived_${object_index}" "$bytes_received"
			;;
		"BytesReceived")
			bytes_received_stats
			update_conf_out "BytesReceived_${object_index}" "$bytes_received"
			;;
		"PacketsSent")
			packets_transmitted_stats
			update_conf_out "PacketsSent_${object_index}" "$packets_transmitted"
			;;
		"PacketsReceived")
			packets_received_stats
			update_conf_out "PacketsReceived_${object_index}" "$packets_received"
			;;
		"ErrorsSent")
			errors_sent_stats
			update_conf_out "ErrorsSent_${object_index}" "$errors_sent"
			;;
		"ErrorsReceived")
			errors_received_stats
			update_conf_out "ErrorsReceived_${object_index}" "$errors_received"
			;;
		"DiscardPacketsSent")
			discard_packets_sent_stats
			update_conf_out "DiscardPacketsSent_${object_index}" "$discard_packets_sent"
			;;
		"DiscardPacketsReceived")
			discard_packets_received_stats
			update_conf_out "DiscardPacketsReceived_${object_index}" "$discard_packets_received"
			;;
		"RetransCount")
			retrans_count_stats
			update_conf_out "RetransCount_${object_index}" "$retrans_count"
			;;
		"OutQLenHistogram")
			out_qlen_histogram_stats
			update_conf_out "OutQLenHistogram_${object_index}" "$out_qlen_histogram"
			;;
	esac
done < ${IN_CONF}

# Configuration is completed successfully
update_conf_out "wlan_configuration_status" "success"

# DEBUG: set debug_save_conf in fapi_wlan_wave_lib_common.sh to save the out conf file
[ "$debug_save_conf" ] && cp ${OUT_CONF} ${CONF_DIR}/wmm_${ac_name}_stats_out_conf

print2log $radio_index DEBUG "$script_name done"
timestamp $radio_index "$script_name:$interface_name:done"
