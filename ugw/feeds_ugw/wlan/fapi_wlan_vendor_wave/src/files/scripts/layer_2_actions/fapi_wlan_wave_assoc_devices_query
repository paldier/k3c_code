#!/bin/sh

# Return the AccessPoint.AssociatedDevice Stats
# Needed objects: AccessPoint, AccessPoint.AssociatedDevice. AccessPoint.AssociatedDevice.Stats or no objects.

# Source library script
[ ! "$FAPI_WLAN_WAVE_INIT_PLATFORM" ] && . /tmp/wlan_wave/fapi_wlan_wave_init_platform.sh

print2log DBG "running fapi_wlan_wave_assoc_devices_query: args: $*"

interface_name=$1

# If interface name is not supplied, exit script
check_input_param "fapi_wlan_wave_assoc_devices_query" "interface_name" "$interface_name"

timestamp "fapi_wlan_wave_assoc_devices_query:$interface_name:begin"

wlanInitIncomplete=`check_if_is_ready $interface_name`
[ "$wlanInitIncomplete" = "1" ] && exit

# DEBUG: TODO: REMOVE
#cp ${IN_CONF} ${WAVE_TMP}/in_conf_assoc_devices_query

# Map the objects indexes to the received objects in the in.conf file
accesspoint_index=`map_param_index Object $ACCESSPOINT_OBJECT`
associated_devices_index=`map_param_index Object $ACCESSPOINT_ASSOCIATED_DEVICES_OBJECT`
associated_devices_stats_index=`map_param_index Object $ACCESSPOINT_ASSOCIATED_DEVICES_STATS_OBJECT`

# If an object that needs to be in the output conf wasn't in the input conf, set it with an index
next_object_index=`get_next_object_index`
[ -z "$accesspoint_index" ] && accesspoint_index=$next_object_index && next_object_index=$((next_object_index+1))
[ -z "$associated_devices_index" ] && associated_devices_index=$next_object_index && next_object_index=$((next_object_index+1))
[ -z "$associated_devices_stats_index" ] && associated_devices_stats_index=$next_object_index && next_object_index=$((next_object_index+1))

# Get list of connected devices
macs=`api_wrapper get iwlist $interface_name peers \| awk \'/[0-9a-fA-F][0-9a-fA-F]:[0-9a-fA-F][0-9a-fA-F]/ {print \\$1}\'`

# Create the output configuration file and set the statistics in it
cat /dev/null > ${OUT_CONF}

update_conf_out "Object_${associated_devices_index}" "$ACCESSPOINT_ASSOCIATED_DEVICES_OBJECT"

# Go over the list of MACs and do the following:
# Count MACs
# Read statistics from mtdump
# Write associated device's statistics to the ouput conf file

associated_count=0
current_associated_devices_index=$associated_devices_index
current_associated_devices_stats_index=$associated_devices_stats_index

for mac in $macs; do
	# Save driver information into a parameter and extract the statistics
	mtdump_output=`api_wrapper get ${BINDIR}/mtdump $interface_name PeerFlowStatus $mac -f ${BINDIR}/mtdump.mtidlc_PeerFlowStat`
	
	downlink_rate=${mtdump_output%%: Last transmit rate*}
	downlink_rate=${downlink_rate##*received}
	downlink_rate=`echo $downlink_rate`
	
	uplink_rate=${mtdump_output%%: Last receive rate*}
	uplink_rate=${uplink_rate##*rate}
	uplink_rate=`echo $uplink_rate`
	
	# TBD: is reading from iwconfig good or we need to read from mtdump?
	iwconfig_output=`api_wrapper get iwconfig $interface_name`
	signal_strength=${iwconfig_output##*Tx-Power=}
	signal_strength=${signal_strength%% dBm*}
	signal_strength=`echo $signal_strength`
	
	retransmissions=${mtdump_output##*]}
	retransmissions=${retransmissions%%: Short-term retransmissions counter}
	retransmissions=`echo $retransmissions`
	
	bytes_sent=${mtdump_output%% :*}
	bytes_sent=${bytes_sent##*:}
	bytes_sent=`echo $bytes_sent`
	
	bytes_received=${mtdump_output%%: Number of bytes received*}
	bytes_received=${bytes_received##*successfully}
	bytes_received=`echo $bytes_received`
	
	packets_sent=${mtdump_output%%: Number of packets transmitted*}
	packets_sent=${packets_sent##*received}
	packets_sent=`echo $packets_sent`
	
	packets_received=${mtdump_output%%: Number of packets received*}
	packets_received=${packets_received##*transmitted}
	packets_received=`echo $packets_received`
	
	# TODO: how to read the following parameters:
	errors_sent=0
	retrans_count=0
	failed_retrans_count=0
	retry_count=0
	multiple_retry_count=0

	# Write the AssociatedDevice object parameters to the output conf file
	update_conf_out "MACAddress_${current_associated_devices_index}" "$mac"
	update_conf_out "AuthenticationState_${current_associated_devices_index}" "true"
	update_conf_out "LastDataDownlinkRate_${current_associated_devices_index}" "$downlink_rate"
	update_conf_out "LastDataUplinkRate_${current_associated_devices_index}" "$uplink_rate"
	update_conf_out "SignalStrength_${current_associated_devices_index}" "$signal_strength"
	update_conf_out "Retransmissions_${current_associated_devices_index}" "$retransmissions"
	update_conf_out "Active_${current_associated_devices_index}" "true"
	
	# Write the AssociatedDevice.Stats object parameters to the output conf file
	update_conf_out "Object_${current_associated_devices_stats_index}" "$ACCESSPOINT_ASSOCIATED_DEVICES_STATS_OBJECT"
	update_conf_out "BytesSent_${current_associated_devices_stats_index}" "$bytes_sent"
	update_conf_out "BytesReceived_${current_associated_devices_stats_index}" "$bytes_received"
	update_conf_out "PacketsSent_${current_associated_devices_stats_index}" "$packets_sent"
	update_conf_out "PacketsReceived_${current_associated_devices_stats_index}" "$packets_received"
	update_conf_out "ErrorsSent_${current_associated_devices_stats_index}" "$errors_sent"
	update_conf_out "RetransCount_${current_associated_devices_stats_index}" "$retrans_count"
	update_conf_out "FailedRetransCount_${current_associated_devices_stats_index}" "$failed_retrans_count"
	update_conf_out "RetryCount_${current_associated_devices_stats_index}" "$retry_count"
	update_conf_out "MultipleRetryCount_${current_associated_devices_stats_index}" "$multiple_retry_count"
	
	current_associated_devices_index=$next_object_index
	next_object_index=$((next_object_index+1))
	current_associated_devices_stats_index=$next_object_index
	next_object_index=$((next_object_index+1))
	associated_count=$((associated_count+1))
done

# Update number of associated devices
update_conf_out "Object_${accesspoint_index}" "$ACCESSPOINT_OBJECT"
update_conf_out "AssociatedDeviceNumberOfEntries_${accesspoint_index}" "$associated_count"

# Configuration is completed successfully
update_conf_out "wlan_configuration_status" "success"

# DEBUG: TODO: REMOVE
#cp ${OUT_CONF} ${WAVE_TMP}/out_conf_assoc_devices_query

print2log DBG "fapi_wlan_wave_assoc_devices_query done"
timestamp "fapi_wlan_wave_assoc_devices_query:$interface_name:done"
