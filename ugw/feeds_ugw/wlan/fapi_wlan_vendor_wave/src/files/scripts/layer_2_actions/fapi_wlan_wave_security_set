#!/bin/sh
# Configure AccessPoint.Security parameters
# Needed object: AccessPoint.Security

# Source library script
[ ! "$FAPI_WLAN_WAVE_INIT_PLATFORM" ] && . /tmp/wlan_wave/fapi_wlan_wave_init_platform.sh

print2log DBG "running fapi_wlan_wave_security_set.Security_modify: args: $*"

interface_name=$1

# If interface name is not supplied, exit script
check_input_param "fapi_wlan_wave_security_set" "interface_name" "$interface_name"

timestamp "fapi_wlan_wave_security_set.Security_modify:$interface_name:begin"

# DEBUG: TODO: REMOVE
#cp ${IN_CONF} ${WAVE_TMP}/in_conf_security

# Map the object index to the received object in the in.conf file
security_index=`map_param_index Object $ACCESSPOINT_SECURITY_OBJECT`

# The list of the security scripts parameters that we configure on the driver configuration file
security_scripts_params="WepEncryption
WepKeys_DefaultKey0"

# The list of the security scripts parameters that we configure on the hostapd configuration file
hostapd_security_scripts_params="WEPKey
SecurityMode
KeyPassphrase
RekeyingInterval
RadiusServerIPAddr
RadiusServerPort
RadiusSecret"

# Stop the interface by killing hostapd
(. $ETC_PATH/fapi_wlan_wave_init_hostapd.sh stop $interface_name)

# Configure the accesspoint driver parameters
[ -n "$security_index" ] && configure_driver_params "$interface_name" "$security_index" "$security_scripts_params" "${WAVE_TMP}/driver_api_security_params_to_set_${interface_name}"

# Configure hostapd parameters
[ -n "$security_index" ] && (. $ETC_PATH/fapi_wlan_wave_init_hostapd.sh create_config $interface_name $security_index "$hostapd_security_scripts_params")

# Create the output configuration file
cat /dev/null > ${OUT_CONF}

# Configuration is completed successfully
update_conf_out "wlan_configuration_status" "success"

# DEBUG: TODO: REMOVE
#cp ${OUT_CONF} ${WAVE_TMP}/out_conf_security

print2log DBG "fapi_wlan_wave_security_set.Security_modify: Done"
timestamp "fapi_wlan_wave_security_set.Security_modify:$interface_name:done"
