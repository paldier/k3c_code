#!/bin/sh
# Configure AccessPoint.AC parameters
# Needed object: AccessPoint.AC

# Source library script
[ ! "$FAPI_WLAN_WAVE_INIT_PLATFORM" ] && . /tmp/wlan_wave/fapi_wlan_wave_init_platform.sh

print2log DBG "running fapi_wlan_wave_wmm_ap_set: args: $*"

interface_name=$1

# If interface name is not supplied, exit script
check_input_param "fapi_wlan_wave_wmm_ap_set" "interface_name" "$interface_name"

timestamp "fapi_wlan_wave_wmm_ap_set:$interface_name:begin"

# DEBUG: TODO: REMOVE
#cp ${IN_CONF} ${WAVE_TMP}/in_conf_wmm_ap_set

# Currently, WMM configurations are not supported for VAPs
is_vap=`check_is_vap $interface_name`
if [ "$is_vap" = "false" ]; then
	# Map the objects indexes to the received objects in the in.conf file
	BE_index=`map_param_index AccessCategory BE`
	BK_index=`map_param_index AccessCategory BK`
	VI_index=`map_param_index AccessCategory VI`
	VO_index=`map_param_index AccessCategory VO`
	
	# The list of the WMM scripts parameters that we configure on the driver configuration file
	wmm_bk_scripts_params="AC_BK_CWmin
	AC_BK_CWmax
	AC_BK_AIFSN
	AC_BK_TXOP"
	
	wmm_be_scripts_params="AC_BE_CWmin
	AC_BE_CWmax
	AC_BE_AIFSN
	AC_BE_TXOP"
	
	wmm_vi_scripts_params="AC_VI_CWmin
	AC_VI_CWmax
	AC_VI_AIFSN
	AC_VI_TXOP"
	
	wmm_vo_scripts_params="AC_VO_CWmin
	AC_VO_CWmax
	AC_VO_AIFSN
	AC_VO_TXOP"
		
	# Stop the interface by killing hostapd
	(. $ETC_PATH/fapi_wlan_wave_init_hostapd.sh stop $interface_name)
		
	# Configure WMM driver parameters
	[ -n "$BE_index" ] && configure_driver_params "$interface_name" "$BE_index" "$wmm_be_scripts_params" "${WAVE_TMP}/driver_api_wmm_ap_be_params_to_set_${interface_name}"
	[ -n "$BK_index" ] && configure_driver_params "$interface_name" "$BK_index" "$wmm_bk_scripts_params" "${WAVE_TMP}/driver_api_wmm_ap_bk_params_to_set_${interface_name}"
	[ -n "$VI_index" ] && configure_driver_params "$interface_name" "$VI_index" "$wmm_vi_scripts_params" "${WAVE_TMP}/driver_api_wmm_ap_vi_params_to_set_${interface_name}"
	[ -n "$VO_index" ] && configure_driver_params "$interface_name" "$VO_index" "$wmm_vo_scripts_params" "${WAVE_TMP}/driver_api_wmm_ap_vo_params_to_set_${interface_name}"
fi
# Create the output configuration file
cat /dev/null > ${OUT_CONF}

# Configuration is completed successfully
update_conf_out "wlan_configuration_status" "success"

# DEBUG: TODO: REMOVE
#cp ${OUT_CONF} ${WAVE_TMP}/out_conf_wmm_ap_set

print2log DBG "fapi_wlan_wave_wmm_ap_set: Done"
timestamp "fapi_wlan_wave_wmm_ap_set:$interface_name:done"
