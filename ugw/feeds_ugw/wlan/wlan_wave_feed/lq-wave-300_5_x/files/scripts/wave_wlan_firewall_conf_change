#!/bin/sh

script_name="wave_wlan_firewall_conf_change"

[ ! "$LIB_COMMON_SOURCED" ] && . /tmp/wave_wlan_lib_common.sh
[ ! "$RC_CONF_SOURCED" ] && rc_conf_source

# Define local parameters
local ap_index interface_name
local rule_index action pcpeid rule_number rc_conf_value value

rule_index=$1
action=$2

# Get the ap_index using pcpeid-1
eval pcpeid=\${wlhs2f_${rule_index}_pcpeId}
ap_index=$((pcpeid-1))

eval rule_number=\${wlhs2f_${rule_index}_cpeId}

timestamp $ap_index "$script_name:$ap_index:begin"
print2log $ap_index DEBUG "$script_name $*"

eval interface_name=\${wlmnwave_${ap_index}_interfaceName}

# Delete the runner file. It will be regenerated by this script.
rm -f $CONF_DIR/$WAVE_WLAN_RUNNNER

if [ "$action" = "remove" ]
then
	echo "${ETC_PATH}/${L2F_CTRL_SCRIPT} remove $interface_name $rule_number" >> $CONF_DIR/$WAVE_WLAN_RUNNNER
elif [ "$action" = "add" ] || [ "$action" = "modify" ]
then
	eval rc_conf_value=\${wlhs2f_${rule_index}_action}
	case "$rc_conf_value" in
		"0") value="-a accept";;
		"1") value="-a deny";;
		"2") value="-a logaccept";;
		"3") value="-a logdeny";;
	esac
	eval rc_conf_value=\${wlhs2f_${rule_index}_ingressIface}
	[ -n "$rc_conf_value" ] && value="${value} -i $rc_conf_value"
	
	eval rc_conf_value=\${wlhs2f_${rule_index}_protocol}
	[ "$rc_conf_value" != "0" ] && value="${value} -p $rc_conf_value"
	
	eval rc_conf_value=\${wlhs2f_${rule_index}_srcMac}
	[ -n "$rc_conf_value" ] && value="${value} -s $rc_conf_value"
	
	eval rc_conf_value=\${wlhs2f_${rule_index}_dstMac}
	[ -n "$rc_conf_value" ] && value="${value} -d $rc_conf_value"

	eval rc_conf_value=\${wlhs2f_${rule_index}_packetType}
	case "$rc_conf_value" in
		"1") value="${value} -t uc";;
		"2") value="${value} -t mc";;
		"3") value="${value} -t bc";;
	esac
	
	eval rc_conf_value=\${wlhs2f_${rule_index}_srcIp}
	[ -n "$rc_conf_value" ] && value="${value} -sip $rc_conf_value"
	
	eval rc_conf_value=\${wlhs2f_${rule_index}_dstIp}
	[ -n "$rc_conf_value" ] && value="${value} -dip $rc_conf_value"
	
	eval rc_conf_value=\${wlhs2f_${rule_index}_srcPort}
	[ -n "$rc_conf_value" ] && value="${value} -sp $rc_conf_value"
	
	eval rc_conf_value=\${wlhs2f_${rule_index}_dstPort}
	[ -n "$rc_conf_value" ] && value="${value} -dp $rc_conf_value"
	
	echo "${ETC_PATH}/${L2F_CTRL_SCRIPT} $action $interface_name $rule_number \"$value\"" >> $CONF_DIR/$WAVE_WLAN_RUNNNER
fi

# Execute the runner
if [ -e "$CONF_DIR/$WAVE_WLAN_RUNNNER" ]
then
	chmod +x $CONF_DIR/$WAVE_WLAN_RUNNNER
	$CONF_DIR/$WAVE_WLAN_RUNNNER
fi

print2log $ap_index DEBUG "$script_name done"
timestamp $ap_index "$script_name:$ap_index:done"