#!/bin/sh

script_name="wave_wlan_get_radio_dyn_info"

[ ! "$LIB_COMMON_SOURCED" ] && . /tmp/wave_wlan_lib_common.sh
[ ! "$RC_CONF_SOURCED" ] && rc_conf_source

# Define local parameters
local ap_index interface_name
local radio_enabled wlan_init_incomplete ifconfig_status status channels_in_use current_channel i ch used channel_bonding guard_interval

ap_index=$1
[ -z "$ap_index" ] && print2log 0 ERROR "$script_name is missing the ap index, aborting" && return

timestamp $ap_index "$script_name:$ap_index:begin"
print2log $ap_index DEBUG "$script_name $*"

eval interface_name=\${wlmnwave_${ap_index}_interfaceName}

eval radio_enabled=\${wlphy_${ap_index}_radioEnable}
wlan_init_incomplete=`check_interface_is_ready $interface_name`
ifconfig_status=`ifconfig | grep $interface_name`
if [ "$radio_enabled" = "0" ] || [ "$wlan_init_incomplete" = "1" ] || [ "$ifconfig_status" = "" ]
then
	status=0
	channels_in_use=""
	current_channel=""
else
	status=1

	# The channel the AP uses
	current_channel=`iwlist $interface_name ch | awk '/Current/ {print \$2}' | cut -d "=" -f 2`

	# Channels in use shows the channel used by the AP and by other APs around it.
	channels_in_use="$current_channel"
	eval used_${current_channel}=yes

	# Read the channels in use from the driver's last scan results and save it to a file.
	# Last scan results can be retrieved from a file saved after last scan or using the iw call
	if [ ! -e ${TEMP_CONF_DIR}/${interface_name}_scan_MAPI.result ]
	then
		# Get scan results of last scan (may be empty if the linux kernel cleaned the scan results)
		iw dev $interface_name scan dump > ${TEMP_CONF_DIR}/${interface_name}_scan.dump
		# Parse the scan results to a MAPI format and source the output file
		cat ${TEMP_CONF_DIR}/${interface_name}_scan.dump | awk -v output="MAPI" -f ${ETC_PATH}/wave_wlan_ap_scan_parse.awk > ${TEMP_CONF_DIR}/${interface_name}_scan_MAPI.result
		# Remove ssid results from output file to avoid special characters
		sed -i '/^ssid/d' ${TEMP_CONF_DIR}/${interface_name}_scan_MAPI.result
	fi
	. ${TEMP_CONF_DIR}/${interface_name}_scan_MAPI.result
	# Go over the scan results and if a channel is in use, add it to the list if it is not already in it.
	i=0
	while [ $i -lt $ap_scan_count ]
	do
		eval ch=\${channel_${i}}
		eval used=\${used_${ch}}
		[ -z $used ] && channels_in_use="$channels_in_use,$ch" && eval used_${ch}=yes
		i=$((i+1))
	done
fi

eval channel_bonding=\${wlphy_${ap_index}_nChanWidth}
eval guard_interval=\${wlphy_${ap_index}_nGuardIntvl}

echo "channelsInUse=\"$channels_in_use\""
echo "channel=\"$current_channel\""
echo "status=\"$status\""
echo "chanWidth=\"$channel_bonding\""
echo "guardIntvl=\"$guard_interval\""

print2log $ap_index DEBUG "$script_name done"
timestamp $ap_index "$script_name:$ap_index:done"
