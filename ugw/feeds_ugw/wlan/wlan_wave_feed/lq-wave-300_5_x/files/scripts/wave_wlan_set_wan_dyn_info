#!/bin/sh

script_name="wave_wlan_set_wan_dyn_info"

[ ! "$LIB_COMMON_SOURCED" ] && . /tmp/wave_wlan_lib_common.sh
[ ! "$RC_CONF_SOURCED" ] && rc_conf_source

# Define local parameters
local ap_index interface_name pap_name
local action_or_data wan_metrics_found

ap_index=$1
action_or_data=$2

[ -z "$ap_index" ] && print2log 0 ERROR "$script_name is missing the ap index, aborting" && return

timestamp $ap_index "$script_name:$ap_index:begin"
print2log $ap_index DEBUG "$script_name $*"

eval interface_name=\${wlmnwave_${ap_index}_interfaceName}
pap_name=`find_pap_name_from_index $ap_index`

if [ "$action_or_data" = "enable" ] || [ "$action_or_data" = "disable" ]
then
	echo "${ETC_PATH}/${WMDCTRL_SCRIPT} $action_or_data $interface_name"
else
	# Write data directly to the hostapd configuration file of the VAP
	wan_metrics_found=`grep -c "hs20_wan_metrics" ${TEMP_CONF_DIR}/${HOSTAPD_VAP_CONF_PREFIX}_${interface_name}.conf`
	if [ $wan_metrics_found -gt 0 ]
	then
		sed -i 's/^hs20_wan_metrics=.*/hs20_wan_metrics='$action_or_data'/' ${TEMP_CONF_DIR}/${HOSTAPD_VAP_CONF_PREFIX}_${interface_name}.conf
	else
		echo "hs20_wan_metrics=$action_or_data" >> ${TEMP_CONF_DIR}/${HOSTAPD_VAP_CONF_PREFIX}_${interface_name}.conf
	fi
	# Delete the runner file. It will be regenerated by this script.
	rm -f $CONF_DIR/$WAVE_WLAN_RUNNNER

	# Restart the radio that was configured
	(. $ETC_PATH/wave_wlan_down.sh $pap_name)
	(. $ETC_PATH/wave_wlan_up.sh $pap_name)
	# set directly in hostapd bss database
	echo "$BINDIR/hostapd_cli -i $interface_name update_wan_metrics $action_or_data" >> $CONF_DIR/$WAVE_WLAN_RUNNNER
	
	# Execute the runner
	chmod +x $CONF_DIR/$WAVE_WLAN_RUNNNER
	$CONF_DIR/$WAVE_WLAN_RUNNNER
fi

print2log $ap_index DEBUG "$script_name done"
timestamp $ap_index "$script_name:$ap_index:done"
